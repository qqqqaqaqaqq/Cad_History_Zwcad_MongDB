<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- 버튼 호버 -->
    <Style x:Key="ButtonHover" TargetType="Button">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter 
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="(Button.RenderTransform).(ScaleTransform.ScaleX)"
                                         To="1.1" Duration="0:0:0.2"/>
                            <DoubleAnimation Storyboard.TargetProperty="(Button.RenderTransform).(ScaleTransform.ScaleY)"
                                         To="1.1" Duration="0:0:0.2"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="(Button.RenderTransform).(ScaleTransform.ScaleX)"
                                         To="1" Duration="0:0:0.2"/>
                            <DoubleAnimation Storyboard.TargetProperty="(Button.RenderTransform).(ScaleTransform.ScaleY)"
                                         To="1" Duration="0:0:0.2"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- 공통 버튼 스타일 -->
    <Style x:Key="CommonBtnStyle" TargetType="Button">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Padding="0,0,0,8">
                        <ContentPresenter 
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center">
                            <ContentPresenter.ContentTemplate>
                                <DataTemplate>
                                    <TextBlock 
                                        Text="{Binding}" 
                                        TextAlignment="Center" 
                                        VerticalAlignment="Center" 
                                        HorizontalAlignment="Center"/>
                                </DataTemplate>
                            </ContentPresenter.ContentTemplate>
                        </ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- RadioBtn, Relative -->
    <Style x:Key="RelativeSwitchViewRadio" TargetType="RadioButton">
        <Setter Property="Foreground" Value="{Binding DataContext.GlobalForeground, RelativeSource={RelativeSource AncestorType=Window}}"/>
        <Setter Property="FontFamily" Value="{Binding DataCotnext.GlobalFontFamily, RelativeSource={RelativeSource AncestorType=Window}}"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Border
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}" 
                        Background="{TemplateBinding Background}"
                        Padding="5">
                        <ContentPresenter 
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Content="{TemplateBinding Content}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="{Binding DataContext.GlobalBackgroundColor_View, RelativeSource={RelativeSource AncestorType=Window}}"/>
                <Setter Property="BorderBrush" Value="{Binding DataContext.GlobalBorderBrush, RelativeSource={RelativeSource AncestorType=Window}}"/>
                <Setter Property="Foreground" Value="{Binding DataContext.GlobalForeground, RelativeSource={RelativeSource AncestorType=Window}}"/>
                <Setter Property="BorderThickness" Value="1,1,1,0"/>
                <Setter Property="FontWeight" Value="Bold"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="False">
                <Setter Property="BorderBrush" Value="{Binding DataContext.GlobalBorderBrush, RelativeSource={RelativeSource AncestorType=Window}}"/>
                <Setter Property="Foreground" Value="#FF888888"/>
                <Setter Property="BorderThickness" Value="0,0,0,1"/>
                <Setter Property="Background" Value="Transparent"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Combobox -->

    <Style x:Key="FancyComboBox" TargetType="ComboBox">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <!-- 템플릿 정의 -->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Border 
                        Background="{TemplateBinding Background}" 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}" 
                        CornerRadius="4">

                        <Grid>
                            <ToggleButton 
                            Name="ToggleButton" 
                            Grid.Column="2"
                            Focusable="false" 
                            IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>

                            <ContentPresenter 
                            Name="ContentSite" 
                            IsHitTestVisible="False" 
                            Content="{TemplateBinding SelectionBoxItem}" 
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" 
                            Margin="6,2,25,2" 
                            VerticalAlignment="Center" 
                            HorizontalAlignment="Left"/>

                            <Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Slide">
                                <Grid Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border x:Name="DropDownBorder" BorderThickness="1" BorderBrush="Gray" Background="White"/>
                                    <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained"/>
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- TextBlock -->
    <Style x:Key="TxtBoxCentalize" TargetType="TextBlock">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="TextAlignment" Value="Center"/>
    </Style>

    <Style x:Key="TreeStyle" TargetType="TreeView">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>

    <!-- TreeBorder -->
    <Style x:Key="TreeBorderStyle" TargetType="Border">
        <Setter Property="BorderBrush" Value="#FFAAAAAA"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="CornerRadius" Value="10"/>
        <Setter Property="Margin" Value="5,0,5,0"/>
        <Setter Property="ClipToBounds" Value="True"/>
    </Style>



    <!-- Data-Grid-->
    <Style x:Key="Data_Gaid_Background" TargetType="DataGrid">
        <Setter Property="GridLinesVisibility" Value="None"/>
        <Setter Property="Background" Value="{Binding DataContext.GlobalBackgroundColor, RelativeSource={RelativeSource AncestorType=Window}}"/>
        <Setter Property="BorderBrush" Value="{Binding DataContext.GlobalBorderBrush, RelativeSource={RelativeSource AncestorType=Window}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="AutoGenerateColumns" Value="False"/>
        <Setter Property="SelectionMode" Value="Extended"/>
        <Setter Property="CanUserAddRows" Value="False"/>
        <Setter Property="HeadersVisibility" Value="Column"/>
    </Style>

    <Style x:Key="Data_Grid_ColumnHeader" TargetType="DataGridColumnHeader">
        <Setter Property="Foreground" Value="{Binding DataContext.GlobalForeground, RelativeSource={RelativeSource AncestorType=Window}}"/>
        <Setter Property="Background" Value="{Binding DataContext.GlobalBackgroundColor, RelativeSource={RelativeSource AncestorType=Window}}"/>
        <Setter Property="BorderBrush" Value="{Binding DataContext.GlobalBorderBrush, RelativeSource={RelativeSource AncestorType=Window}}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{Binding DataContext.GlobalBackgroundColor_View, RelativeSource={RelativeSource AncestorType=Window}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="Data_Grid_Cell" TargetType="DataGridCell">
        <Setter Property="Foreground" Value="{Binding DataContext.GlobalForeground, RelativeSource={RelativeSource AncestorType=Window}}"/>
        <Setter Property="Background" Value="{Binding DataContext.GlobalBackgroundColor, RelativeSource={RelativeSource AncestorType=Window}}"/>
        <Setter Property="BorderBrush" Value="{Binding DataContext.GlobalBorderBrush, RelativeSource={RelativeSource AncestorType=Window}}"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="BorderThickness" Value="0.6"/>


        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{Binding DataContext.GlobalBackgroundColor_View, RelativeSource={RelativeSource AncestorType=Window}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="Data_ElementStyle" TargetType="TextBlock">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="5,0,0,0"/>
    </Style>

    <Style x:Key="TreeItemStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{Binding Theme}"/>
    </Style>
</ResourceDictionary>